<form method="POST" action="/store/FirstConfirmDesign">

    <div class="form-group row">
        <label for="categorySelect" class="col-sm-2 col-form-label">دسته بندی</label>
        <div class="col-sm-10">
            <select class="form-select" id="categorySelect">
                <% categories.forEach(category=> { %>
                    <option value="<%= category.Id %>">
                        <%= category.CategoryName %>
                    </option>
                    <% }); %>
            </select>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-sm-10">
            <input class="form-control" name="DesignId" type="hidden" value="<%= DesignId %>">
        </div>
    </div>

    <div class="form-group row">
        <label for="subcategorySelect"   class="col-sm-2 col-form-label">زیر دسته</label>
        <div class="col-sm-10">
            <select name="DesignCategoryId" class="form-select" id="subcategorySelect">
            </select>
        </div>
    </div>

    <br />

    <button type="submit" class="btn btn-success">تایید درخواست</button>

</form>

<script>
    const categorySelect = document.getElementById('categorySelect');
    const subcategorySelect = document.getElementById('subcategorySelect');

    categorySelect.addEventListener('change',
        async () => {
            const categoryId = categorySelect.value;

            try {
                const response = await fetch('/category/getDesignCategory/' + categoryId, {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json' // Might be required depending on your backend
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                console.log(response);
                const subcategories = await response.json();
                subcategorySelect.innerHTML = ''; // Clear previous options

                subcategories.forEach(subcategory => {
                    const option = document.createElement('option');
                    option.value = subcategory.Id;
                    option.text = subcategory.CategoryName;

                    subcategorySelect.appendChild(option);
                });
            } catch (error) {
                console.error('Error fetching subcategories:', error);
                // Handle errors gracefully, e.g., display an error message to the user
            }
        });
</script>



<style>
    select {
        /* استایل های عمومی برای همه Select ها */
        width: 200px;
        /* عرض Select */
        padding: 10px;
        /* فاصله داخلی */
        border: 1px solid #ccc;
        /* حاشیه */
        border-radius: 5px;
        /* گوشه های گرد */
        font-size: 16px;
        background-color: #fff;
        color: #333;

        /* استایل هنگام فوکوس */
        &:focus {
            outline: none;
            border-color: #007bff;
            box-shadow: 0px 0px 5px rgba(0, 123, 255, 0.5);
        }
    }
</style>